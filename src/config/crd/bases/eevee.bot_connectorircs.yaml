---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: connectorircs.eevee.bot
spec:
  group: eevee.bot
  names:
    kind: ConnectorIrc
    listKind: ConnectorIrcList
    plural: connectorircs
    singular: connectorirc
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConnectorIrc is the Schema for the connectorircs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ConnectorIrcSpec defines the desired state of ConnectorIrc
            properties:
              containerImage:
                default: ghcr.io/eeveebot/connector-irc:latest
                description: ContainerImage defines the container image to use
                type: string
              existingSecret:
                description: ExistingSecret defines an externally provided ircConnections
                  secret
                type: string
              ircConnections:
                description: Connections defines IRC Connections for the connector
                items:
                  description: IrcConnectionSpec defines the configuration for a single
                    IRC connection
                  properties:
                    ident:
                      description: IdentSpec defines the IRC ident configuration
                      properties:
                        gecos:
                          type: string
                        nick:
                          type: string
                        quitMsg:
                          type: string
                        username:
                          type: string
                        version:
                          type: string
                      type: object
                    irc:
                      description: IRCServerConnectionSpec defines the detailed IRC
                        Connection configuration
                      properties:
                        autoReconnect:
                          type: boolean
                        autoReconnectMaxRetries:
                          type: integer
                        autoReconnectWait:
                          type: integer
                        autoRejoin:
                          type: boolean
                        autoRejoinMaxRetries:
                          type: integer
                        autoRejoinWait:
                          type: integer
                        host:
                          type: string
                        pingInterval:
                          type: integer
                        pingTimeout:
                          type: integer
                        port:
                          type: integer
                        ssl:
                          type: boolean
                      type: object
                    name:
                      type: string
                    postConnect:
                      description: PostConnectSpec defines the post-connect actions
                      properties:
                        join:
                          items:
                            description: PostConnectJoinSpec defines the join actions
                            properties:
                              channel:
                                type: string
                              key:
                                type: string
                              sequence:
                                type: integer
                            type: object
                          type: array
                        message:
                          items:
                            description: PostConnectMessageSpec defines the message
                              actions
                            properties:
                              msg:
                                type: string
                              sequence:
                                type: integer
                              target:
                                type: string
                            type: object
                          type: array
                        mode:
                          items:
                            description: PostConnectModeSpec defines the mode actions
                            properties:
                              mode:
                                type: string
                              sequence:
                                type: integer
                              target:
                                type: string
                            type: object
                          type: array
                        raw:
                          items:
                            description: PostConnectRawSpec defines the raw actions
                            properties:
                              raw:
                                type: string
                              sequence:
                                type: integer
                            type: object
                          type: array
                      type: object
                  type: object
                type: array
              pullPolicy:
                default: Always
                description: PullPolicy defines the imagepullpolicy to use
                type: string
              size:
                default: 1
                description: |-
                  Size defines the number of ConnectorIrc instances
                  The following markers will use OpenAPI v3 schema to validate the value
                  More info: https://book.kubebuilder.io/reference/markers/crd-validation.html
                format: int32
                maximum: 1
                minimum: 1
                type: integer
            type: object
          status:
            description: ConnectorIrcStatus defines the observed state of ConnectorIrc
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
