name: Build Operator Image

on:
  push:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: "operator"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Go 1.23.3
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.3"

      - name: Setup operator-sdk
        run: |
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
          export OS=$(uname | awk '{print tolower($0)}')
          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.38.0
          curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}
          chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Images
        run: |
          export GOPATH="$(pwd)"
          cd src/eevee
          make build-installer IMG="ghcr.io/eeveebot/operator:${{ github.sha }}"
          # copy existing Dockerfile and insert --platform=${BUILDPLATFORM} into Dockerfile.cross, and preserve the original Dockerfile
          sed -e '1 s/\(^FROM\)/FROM --platform=\$$\{BUILDPLATFORM\}/; t' -e ' 1,// s//FROM --platform=\$$\{BUILDPLATFORM\}/' Dockerfile > Dockerfile.cross
          docker buildx create --name eevee-builder
          docker buildx use eevee-builder
          docker buildx build --push --platform=$(PLATFORMS) \
            --tag ghcr.io/eeveebot/operator:${{ github.sha }} \
            --tag ghcr.io/eeveebot/operator:${{ github.ref_name }} \
            -f Dockerfile.cross .
          docker buildx rm eevee-builder
          rm Dockerfile.cross
        if: ${{ always() && format('refs/heads/{0}', github.event.repository.default_branch) != github.ref }}

      - name: Build and Push Images
        run: |
          export GOPATH="$(pwd)"
          cd src/eevee
          make build-installer IMG="ghcr.io/eeveebot/operator:${{ github.sha }}"
          # copy existing Dockerfile and insert --platform=${BUILDPLATFORM} into Dockerfile.cross, and preserve the original Dockerfile
          sed -e '1 s/\(^FROM\)/FROM --platform=\$$\{BUILDPLATFORM\}/; t' -e ' 1,// s//FROM --platform=\$$\{BUILDPLATFORM\}/' Dockerfile > Dockerfile.cross
          docker buildx create --name eevee-builder
          docker buildx use eevee-builder
          docker buildx build --push --platform=$(PLATFORMS) \
            --tag ghcr.io/eeveebot/operator:${{ github.sha }} \
            --tag ghcr.io/eeveebot/operator:${{ github.ref_name }} \
            --tag ghcr.io/eeveebot/operator:latest \
            -f Dockerfile.cross .
          docker buildx rm eevee-builder
          rm Dockerfile.cross
        if: ${{ always() && format('refs/heads/{0}', github.event.repository.default_branch) == github.ref }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: install.yaml
          path: src/eevee/dist/install.yaml
